class Solution {
public:
    long long int solve(vector<int> &nums)
    {
        int n=nums.size();
        if(n==0)
            return 0;
        if(n==1)
            return nums[0];
        // base dp condision
        long long int val1=nums[0];
        long long int val2=0;

        for(int i=1;i<n;i++)// started from second element
        {
          long long  int inc=nums[i];
            if(i-2 >=0)
                inc+=val2;
          long long  int exc=val1+0;
            long long int ans=max(inc,exc);
            val2=val1;
            val1=ans;
        }
        return val1;
    }

    int rob(vector<int>& nums) {
       int n=nums.size();
    if(n==1)
        return nums[0];
    vector<int> first,second;
    for(int i=0;i<n;i++)
    {
        if(i!=0)
            first.push_back(nums[i]);
        if(i!=n-1)
            second.push_back(nums[i]);
    }
    return max(solve(first),solve(second));  
    }
};
